[Righe 4-9] Vengono dichiarate le variabili necessarie per il funzionamento del
server :
- HTMLResponse contiene la pagina web da inviare come risposta ai richiedenti;
- sockfd è la variabile utilizzata per creare il socket e il server ;
- connfd è il file ricevuto tramite la connessione;
- i è utilizzata all’interno dei cicli;
- length è la lunghezza della richiesta;
- request è la richiesta del client, method è il metodo HTTP (POST, GET, ...) e c è una variabile temporanea utilizzata per stampare il contenuto del file.


[Righe 11-15] Viene creata la socket sulla porta 8000 e in caso di errore il programma termina.


[Riga 18] Si attende una richiesta di connessione per l’invio di un file descriptor (FD).


[Righe 20-30] Al collegamento di un client, il server stampa l’intero header della richiesta sul terminale.


[Righe 32-37] Se viene eseguita una richiesta POST, viene stampato il contenuto del file passato.


[Righe 39-46] Viene inviata come risposta la pagina web, chiusa la connessio-
ne/socket e fermato il programma. Una volta compilato ed eseguito sul terminale, il server rimane in attesa di una connessione da parte di un client. Il tentativo di eseguire lo stesso programma fallisce poiché non è possibile creare un’interfaccia socket sulla porta 8000 (già occupata). Collegandosi ad una delle due pagine web “http://127.0.0.1:8000/” oppure “http://localhost:8000/” (l’URL è lo stesso perché cambia solo l’alias).
